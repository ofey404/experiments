apiVersion: apps/v1
kind: Deployment
metadata:
  name: request-visualizer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: request-visualizer
  template:
    metadata:
      labels:
        app: request-visualizer
    spec:
      containers:
      - name: app
        image: python:3.10-slim-bullseye
        command:
        - python
        - -c
        - |
          #!/usr/bin/env python3
          """
          License: MIT License
          Copyright (c) 2023 Miel Donkers
          Very simple HTTP server in python for logging requests
          Usage::
              ./server.py [<port>]
          """
          from http.server import BaseHTTPRequestHandler, HTTPServer
          import logging

          import textwrap

          class S(BaseHTTPRequestHandler):
              def do_GET(self):
                  request_info = f"GET request,\nPath: {str(self.path)}\nHeaders:\n{textwrap.indent(str(self.headers), '    ')}\n"
                  logging.info(request_info)
                  self.send_response(200)
                  self.send_header('Content-type', 'text/html')
                  self.end_headers()
                  self.wfile.write(request_info.encode('utf-8'))

          def run(server_class=HTTPServer, handler_class=S, port=80):
              logging.basicConfig(level=logging.INFO)
              server_address = ('', port)
              httpd = server_class(server_address, handler_class)
              logging.info('Starting httpd...\n')
              try:
                  httpd.serve_forever()
              except KeyboardInterrupt:
                  pass
              httpd.server_close()
              logging.info('Stopping httpd...\n')
          run(port=80)
        imagePullPolicy: IfNotPresent
---
apiVersion: v1
kind: Service
metadata:
  name: request-visualizer
spec:
  ports:
  - port: 80
    targetPort: 80
    name: http
  selector:
    app: request-visualizer
