digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	"(below main)" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="libc.so.6\n(below main)\n100.00%\n(0.00%)\n2×"];
	"(below main)" -> main [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	"0x0000000000020290" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ld-linux-x86-64.so.2\n0x0000000000020290\n100.00%\n(0.00%)\n0×"];
	"0x0000000000020290" -> "(below main)" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	"0x00000000001090e0" [color="#0d1776", fontcolor="#ffffff", fontsize="10.00", label="???\n0x00000000001090e0\n2.50%\n(0.02%)\n10000000×"];
	"0x00000000001090e0" -> "operator new(unsigned long)" [arrowsize="0.35", color="#0d1776", fontcolor="#0d1776", fontsize="10.00", label="2.47%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"0x00000000001090f0" [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="???\n0x00000000001090f0\n1.56%\n(0.02%)\n10000000×"];
	"0x00000000001090f0" -> "operator delete(void*, unsigned long)" [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.54%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"0x00000000048ea0d0" [color="#0d1676", fontcolor="#ffffff", fontsize="10.00", label="???\n0x00000000048ea0d0\n2.32%\n(0.02%)\n10000001×"];
	"0x00000000048ea0d0" -> malloc [arrowsize="0.35", color="#0d1676", fontcolor="#0d1676", fontsize="10.00", label="2.30%\n10000001×", labeldistance="0.50", penwidth="0.50"];
	"0x00000000048ea2e0" [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="???\n0x00000000048ea2e0\n1.52%\n(0.02%)\n10000000×"];
	"0x00000000048ea2e0" -> "operator delete(void*)" [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.49%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"0x00000000048eab30" [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="???\n0x00000000048eab30\n1.47%\n(0.02%)\n10000000×"];
	"0x00000000048eab30" -> free [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.44%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"__gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&)" [color="#ec7b03", fontcolor="#ffffff", fontsize="10.00", label="main\n__gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&)\n87.15%\n(87.15%)\n10000000×"];
	"__gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)" [color="#0d1976", fontcolor="#ffffff", fontsize="10.00", label="main\n__gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)\n2.88%\n(0.30%)\n10000000×"];
	"__gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)" -> "0x00000000001090e0" [arrowsize="0.35", color="#0d1776", fontcolor="#0d1776", fontsize="10.00", label="2.50%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"__gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)" [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="main\n__gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)\n1.75%\n(0.19%)\n10000000×"];
	"__gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)" -> "0x00000000001090f0" [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.56%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"_int_free" [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="libc.so.6\n_int_free\n1.13%\n(1.13%)\n10000000×"];
	"_int_malloc" [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="libc.so.6\n_int_malloc\n1.76%\n(1.76%)\n10000002×"];
	"foo()" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="main\nfoo()\n100.00%\n(0.26%)\n1×"];
	"foo()" -> "std::allocator<int>::~allocator()" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.22%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"foo()" -> "std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&)" [arrowsize="0.98", color="#f82c01", fontcolor="#f82c01", fontsize="10.00", label="95.63%\n10000000×", labeldistance="3.83", penwidth="3.83"];
	"foo()" -> "std::vector<int, std::allocator<int> >::~vector()" [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.66%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	free [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="libc.so.6\nfree\n1.44%\n(0.31%)\n10000000×"];
	free -> "_int_free" [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.13%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"int* std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&, std::random_access_iterator_tag)" [color="#ec7603", fontcolor="#ffffff", fontsize="10.00", label="main\nint* std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&, std::random_access_iterator_tag)\n87.65%\n(0.30%)\n10000000×"];
	"int* std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&, std::random_access_iterator_tag)" -> "void std::__fill_a<int*, int>(int*, int*, int const&)" [arrowsize="0.93", color="#ec7903", fontcolor="#ec7903", fontsize="10.00", label="87.35%\n10000000×", labeldistance="3.49", penwidth="3.49"];
	"int* std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)" [color="#ed7103", fontcolor="#ffffff", fontsize="10.00", label="main\nint* std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)\n88.26%\n(0.19%)\n10000000×"];
	"int* std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)" -> "int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)" [arrowsize="0.94", color="#ed7303", fontcolor="#ed7303", fontsize="10.00", label="88.07%\n10000000×", labeldistance="3.52", penwidth="3.52"];
	"int* std::__uninitialized_fill_n_a<int*, unsigned long, int, int>(int*, unsigned long, int const&, std::allocator<int>&)" [color="#ee6d03", fontcolor="#ffffff", fontsize="10.00", label="main\nint* std::__uninitialized_fill_n_a<int*, unsigned long, int, int>(int*, unsigned long, int const&, std::allocator<int>&)\n88.66%\n(0.20%)\n10000000×"];
	"int* std::__uninitialized_fill_n_a<int*, unsigned long, int, int>(int*, unsigned long, int const&, std::allocator<int>&)" -> "int* std::uninitialized_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)" [arrowsize="0.94", color="#ee6f03", fontcolor="#ee6f03", fontsize="10.00", label="88.46%\n10000000×", labeldistance="3.54", penwidth="3.54"];
	"int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)" [color="#ed7303", fontcolor="#ffffff", fontsize="10.00", label="main\nint* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)\n88.07%\n(0.26%)\n10000000×"];
	"int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)" -> "int* std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&, std::random_access_iterator_tag)" [arrowsize="0.94", color="#ec7603", fontcolor="#ec7603", fontsize="10.00", label="87.65%\n10000000×", labeldistance="3.51", penwidth="3.51"];
	"int* std::uninitialized_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)" [color="#ee6f03", fontcolor="#ffffff", fontsize="10.00", label="main\nint* std::uninitialized_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)\n88.46%\n(0.20%)\n10000000×"];
	"int* std::uninitialized_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)" -> "int* std::__uninitialized_fill_n<true>::__uninit_fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)" [arrowsize="0.94", color="#ed7103", fontcolor="#ed7103", fontsize="10.00", label="88.26%\n10000000×", labeldistance="3.53", penwidth="3.53"];
	main [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="main\nmain\n100.00%\n(0.00%)\n1×"];
	main -> "foo()" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	malloc [color="#0d1676", fontcolor="#ffffff", fontsize="10.00", label="libc.so.6\nmalloc\n2.30%\n(0.53%)\n10000001×"];
	malloc -> "_int_malloc" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.76%\n10000001×", labeldistance="0.50", penwidth="0.50"];
	"operator delete(void*)" [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.30\noperator delete(void*)\n1.49%\n(0.02%)\n10000000×"];
	"operator delete(void*)" -> "0x00000000048eab30" [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.47%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"operator delete(void*, unsigned long)" [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.30\noperator delete(void*, unsigned long)\n1.54%\n(0.02%)\n10000000×"];
	"operator delete(void*, unsigned long)" -> "0x00000000048ea2e0" [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.52%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"operator new(unsigned long)" [color="#0d1776", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.30\noperator new(unsigned long)\n2.47%\n(0.15%)\n10000000×"];
	"operator new(unsigned long)" -> "0x00000000048ea0d0" [arrowsize="0.35", color="#0d1676", fontcolor="#0d1676", fontsize="10.00", label="2.32%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)" [color="#0d1b77", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)\n3.25%\n(0.20%)\n10000000×"];
	"std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)" -> "std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)" [arrowsize="0.35", color="#0d1a77", fontcolor="#0d1a77", fontsize="10.00", label="3.06%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)" [color="#0d1c77", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)\n3.59%\n(0.34%)\n10000000×"];
	"std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)" -> "std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)" [arrowsize="0.35", color="#0d1b77", fontcolor="#0d1b77", fontsize="10.00", label="3.25%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)" [color="#0d1676", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)\n2.17%\n(0.22%)\n10000000×"];
	"std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)" -> "std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1.95%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)" [color="#0d2079", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)\n4.51%\n(0.27%)\n10000000×"];
	"std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)" -> "std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)" [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.59%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)" -> "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)" [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.65%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)" [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)\n0.65%\n(0.21%)\n10000000×"];
	"std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)" -> "std::allocator<int>::allocator(std::allocator<int> const&)" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.27%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::_Vector_base<int, std::allocator<int> >::~_Vector_base()" [color="#0d1976", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::_Vector_base<int, std::allocator<int> >::~_Vector_base()\n2.84%\n(0.31%)\n10000000×"];
	"std::_Vector_base<int, std::allocator<int> >::~_Vector_base()" -> "std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)" [arrowsize="0.35", color="#0d1676", fontcolor="#0d1676", fontsize="10.00", label="2.17%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::allocator<int>::allocator(std::allocator<int> const&)" [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::allocator<int>::allocator(std::allocator<int> const&)\n0.55%\n(0.35%)\n20000000×"];
	"std::allocator<int>::~allocator()" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::allocator<int>::~allocator()\n0.67%\n(0.41%)\n30000000×"];
	"std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)" [color="#0d1a77", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)\n3.06%\n(0.17%)\n10000000×"];
	"std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)" -> "__gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)" [arrowsize="0.35", color="#0d1976", fontcolor="#0d1976", fontsize="10.00", label="2.88%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)" [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)\n1.95%\n(0.20%)\n10000000×"];
	"std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)" -> "__gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.75%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::vector<int, std::allocator<int> >::_M_fill_initialize(unsigned long, int const&)" [color="#ee6a03", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::vector<int, std::allocator<int> >::_M_fill_initialize(unsigned long, int const&)\n89.02%\n(0.27%)\n10000000×"];
	"std::vector<int, std::allocator<int> >::_M_fill_initialize(unsigned long, int const&)" -> "int* std::__uninitialized_fill_n_a<int*, unsigned long, int, int>(int*, unsigned long, int const&, std::allocator<int>&)" [arrowsize="0.94", color="#ee6d03", fontcolor="#ee6d03", fontsize="10.00", label="88.66%\n10000000×", labeldistance="3.55", penwidth="3.55"];
	"std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)" [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)\n1.71%\n(0.40%)\n10000000×"];
	"std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)" -> "std::allocator<int>::allocator(std::allocator<int> const&)" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.27%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)" -> "std::allocator<int>::~allocator()" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.22%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)" -> "std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.82%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)\n0.82%\n(0.31%)\n10000000×"];
	"std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&)" [color="#f82c01", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&)\n95.63%\n(0.39%)\n10000000×"];
	"std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&)" -> "std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)" [arrowsize="0.35", color="#0d2079", fontcolor="#0d2079", fontsize="10.00", label="4.51%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&)" -> "std::vector<int, std::allocator<int> >::_M_fill_initialize(unsigned long, int const&)" [arrowsize="0.94", color="#ee6a03", fontcolor="#ee6a03", fontsize="10.00", label="89.02%\n10000000×", labeldistance="3.56", penwidth="3.56"];
	"std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&)" -> "std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.71%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"std::vector<int, std::allocator<int> >::~vector()" [color="#0d1c77", fontcolor="#ffffff", fontsize="10.00", label="main\nstd::vector<int, std::allocator<int> >::~vector()\n3.66%\n(0.27%)\n10000000×"];
	"std::vector<int, std::allocator<int> >::~vector()" -> "std::_Vector_base<int, std::allocator<int> >::~_Vector_base()" [arrowsize="0.35", color="#0d1976", fontcolor="#0d1976", fontsize="10.00", label="2.84%\n10000000×", labeldistance="0.50", penwidth="0.50"];
	"void std::__fill_a<int*, int>(int*, int*, int const&)" [color="#ec7903", fontcolor="#ffffff", fontsize="10.00", label="main\nvoid std::__fill_a<int*, int>(int*, int*, int const&)\n87.35%\n(0.20%)\n10000000×"];
	"void std::__fill_a<int*, int>(int*, int*, int const&)" -> "__gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&)" [arrowsize="0.93", color="#ec7b03", fontcolor="#ec7b03", fontsize="10.00", label="87.15%\n10000000×", labeldistance="3.49", penwidth="3.49"];
}
