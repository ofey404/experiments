apiVersion: "kubeflow.org/v1"
kind: "PyTorchJob"
metadata:
  name: "colossal-run-multinode"
spec:
  pytorchReplicaSpecs:
    Master:
      replicas: 1
      restartPolicy: OnFailure
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          nodeSelector:
            eks.amazonaws.com/nodegroup: g4dn-xlarge-2-chi3b80fs65ir5p2k57g
          containers:
            - name: pytorch
              image: hpcaitech/colossalai:0.2.5
              command:
                - python
                - -m
                - torch.distributed.run
                - /mnt/project/train.py
                - --config
                - /mnt/project/config.py
                - --optimizer
                - lars
                - --synthetic
                - --output
                - /mnt/project/
              resources:
                limits:
                  nvidia.com/gpu: 1
              volumeMounts:
                - mountPath: /mnt/project
                  name: project
          volumes:
            - name: project
              hostPath:
                path: /tmp/data/multinode
    Worker:
      replicas: 1
      restartPolicy: OnFailure
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          nodeSelector:
            eks.amazonaws.com/nodegroup: g4dn-xlarge-2-chi3b80fs65ir5p2k57g
          containers:
            - name: pytorch
              image: hpcaitech/colossalai:0.2.5
              command:
                - python
                - -m
                - torch.distributed.run
                - /mnt/project/train.py
                - --config
                - /mnt/project/config.py
                - --optimizer
                - lars
                - --synthetic
                - --output
                - /mnt/project/
              resources:
                limits:
                  nvidia.com/gpu: 1
              volumeMounts:
                - mountPath: /mnt/project
                  name: project
          volumes:
            - name: project
              hostPath:
                path: /tmp/data/multinode
