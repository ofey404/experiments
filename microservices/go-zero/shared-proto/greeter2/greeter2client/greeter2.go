// Code generated by goctl. DO NOT EDIT.
// Source: greeter2.proto

package greeter2client

import (
	"context"

	"github.com/ofey404/experiments/microservices/go-zero/shared-proto/greeter2/greeter2"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	HelloReply   = greeter2.HelloReply
	HelloRequest = greeter2.HelloRequest

	Greeter2 interface {
		// Sends a greeting
		SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	}

	defaultGreeter2 struct {
		cli zrpc.Client
	}
)

func NewGreeter2(cli zrpc.Client) Greeter2 {
	return &defaultGreeter2{
		cli: cli,
	}
}

// Sends a greeting
func (m *defaultGreeter2) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	client := greeter2.NewGreeter2Client(m.cli.Conn())
	return client.SayHello(ctx, in, opts...)
}
