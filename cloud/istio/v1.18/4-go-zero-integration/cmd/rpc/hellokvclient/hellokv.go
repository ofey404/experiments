// Code generated by goctl. DO NOT EDIT.
// Source: hellokv2.proto

package hellokvclient

import (
	"context"

	"github.com/ofey404/experiments/cloud/istio/v1.18/4-go-zero-integration/cmd/rpc/hellokv"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetRequest  = hellokv.GetRequest
	GetResponse = hellokv.GetResponse
	SetRequest  = hellokv.SetRequest
	SetResponse = hellokv.SetResponse

	Hellokv interface {
		Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
		Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error)
	}

	defaultHellokv struct {
		cli zrpc.Client
	}
)

func NewHellokv(cli zrpc.Client) Hellokv {
	return &defaultHellokv{
		cli: cli,
	}
}

func (m *defaultHellokv) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	client := hellokv.NewHellokvClient(m.cli.Conn())
	return client.Get(ctx, in, opts...)
}

func (m *defaultHellokv) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error) {
	client := hellokv.NewHellokvClient(m.cli.Conn())
	return client.Set(ctx, in, opts...)
}
